name: deploy-hosted-and-wallet

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: separate-wallet-host-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-wallet-host:
    environment: web3authn
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies (workspace)
        run: pnpm install --no-frozen-lockfile

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install wasm-pack
        run: |
          curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Build SDK (@tatchi/sdk)
        run: pnpm -C sdk build

      - name: Build wallet host example (if present)
        if: ${{ hashFiles('examples/wallet-scoped-credentials/package.json') != '' }}
        env:
          VITE_WALLET_ORIGIN: ${{ vars.VITE_WALLET_ORIGIN }}
          VITE_WALLET_SERVICE_PATH: ${{ vars.VITE_WALLET_SERVICE_PATH }}
          VITE_SDK_BASE_PATH: ${{ vars.VITE_SDK_BASE_PATH }}
          VITE_RP_ID_BASE: ${{ vars.VITE_RP_ID_BASE }}
          VITE_RELAYER_URL: ${{ vars.VITE_RELAYER_URL }}
          VITE_RELAYER_ACCOUNT_ID: ${{ vars.VITE_RELAYER_ACCOUNT_ID }}
          VITE_NEAR_NETWORK: ${{ vars.VITE_NEAR_NETWORK }}
          VITE_NEAR_RPC_URL: ${{ vars.VITE_NEAR_RPC_URL }}
          VITE_NEAR_EXPLORER: ${{ vars.VITE_NEAR_EXPLORER }}
        run: pnpm -C examples/wallet-scoped-credentials build

      - name: Copy SDK assets into Pages output (example)
        if: ${{ hashFiles('examples/wallet-scoped-credentials/package.json') != '' }}
        run: |
          mkdir -p examples/wallet-scoped-credentials/dist/sdk examples/wallet-scoped-credentials/dist/sdk/workers
          rsync -av --delete sdk/dist/esm/sdk/ examples/wallet-scoped-credentials/dist/sdk/
          # Include web workers + colocated WASM binaries expected at /sdk/workers
          if [ -d sdk/dist/workers ]; then
            rsync -av --delete sdk/dist/workers/ examples/wallet-scoped-credentials/dist/sdk/workers/
          fi

      - name: "Fallback: generate minimal wallet-dist when example is missing"
        if: ${{ hashFiles('examples/wallet-scoped-credentials/package.json') == '' }}
        run: |
          set -euxo pipefail
          mkdir -p wallet-dist/wallet-service wallet-dist/sdk wallet-dist/sdk/workers
          cat > wallet-dist/wallet-service/index.html <<'HTML'
          <!doctype html>
          <html lang="en">
            <head>
              <meta charset="utf-8" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <title>Web3Authn Wallet Service</title>
              <script>window.global ||= window; window.process ||= { env: {} };</script>
            </head>
            <body>
              <script type="module" src="/sdk/wallet-iframe-host.js"></script>
            </body>
          </html>
          HTML
          cat > wallet-dist/_headers <<'HEADERS'
          /*
            Cross-Origin-Opener-Policy: same-origin
            Cross-Origin-Embedder-Policy: require-corp
            Cross-Origin-Resource-Policy: cross-origin
            Permissions-Policy: publickey-credentials-get=(self), publickey-credentials-create=(self)

          /wallet-service
            Cross-Origin-Opener-Policy: unsafe-none
          /wallet-service/
            Cross-Origin-Opener-Policy: unsafe-none
          /sdk/*
            Access-Control-Allow-Origin: *
          /sdk/workers/*
            Access-Control-Allow-Origin: *
          HEADERS
          rsync -av --delete sdk/dist/esm/sdk/ wallet-dist/sdk/
          if [ -d sdk/dist/workers ]; then
            rsync -av --delete sdk/dist/workers/ wallet-dist/sdk/workers/
          fi

      - name: Deploy example to Cloudflare Pages (wallet host)
        if: ${{ hashFiles('examples/wallet-scoped-credentials/package.json') != '' }}
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PAGES_PROJECT_WALLET }}
          directory: examples/wallet-scoped-credentials/dist

      - name: Deploy fallback wallet-dist to Cloudflare Pages (wallet host)
        if: ${{ hashFiles('examples/wallet-scoped-credentials/package.json') == '' }}
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PAGES_PROJECT_WALLET }}
          directory: wallet-dist

  deploy-hosted-app:
    environment: hosted
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install wasm-pack
        run: |
          curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies (workspace)
        run: pnpm install --no-frozen-lockfile

      - name: Build SDK (@tatchi/sdk)
        run: pnpm -C sdk build

      - name: Build hosted app (examples/vite)
        env:
          VITE_WALLET_ORIGIN: ${{ vars.VITE_WALLET_ORIGIN }}
          VITE_WALLET_SERVICE_PATH: ${{ vars.VITE_WALLET_SERVICE_PATH }}
          VITE_SDK_BASE_PATH: ${{ vars.VITE_SDK_BASE_PATH }}
          VITE_RP_ID_BASE: ${{ vars.VITE_RP_ID_BASE }}
          VITE_RELAYER_URL: ${{ vars.VITE_RELAYER_URL }}
          VITE_RELAYER_ACCOUNT_ID: ${{ vars.VITE_RELAYER_ACCOUNT_ID }}
          VITE_NEAR_NETWORK: ${{ vars.VITE_NEAR_NETWORK }}
          VITE_NEAR_RPC_URL: ${{ vars.VITE_NEAR_RPC_URL }}
          VITE_NEAR_EXPLORER: ${{ vars.VITE_NEAR_EXPLORER }}
        run: pnpm -C examples/vite build

      - name: Deploy hosted app to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PAGES_PROJECT_HOSTED }}
          directory: examples/vite/dist
